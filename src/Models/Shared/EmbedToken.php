<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Speakeasy\SpeakeasyClientSDK\Models\Shared;


/** EmbedToken - A representation of an embed token granted for working with Speakeasy components. */
class EmbedToken
{
    /**
     * Creation timestamp.
     *
     * @var \DateTime $createdAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('created_at')]
    public \DateTime $createdAt;

    /**
     * The ID of the user that created this token.
     *
     * @var string $createdBy
     */
    #[\JMS\Serializer\Annotation\SerializedName('created_by')]
    public string $createdBy;

    /**
     * A detailed description of the EmbedToken.
     *
     * @var string $description
     */
    #[\JMS\Serializer\Annotation\SerializedName('description')]
    public string $description;

    /**
     * The time this token expires.
     *
     * @var \DateTime $expiresAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('expires_at')]
    public \DateTime $expiresAt;

    /**
     * The filters applied to this token.
     *
     * @var string $filters
     */
    #[\JMS\Serializer\Annotation\SerializedName('filters')]
    public string $filters;

    /**
     * The ID of this EmbedToken.
     *
     * @var string $id
     */
    #[\JMS\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * The last time this token was used.
     *
     * @var ?\DateTime $lastUsed
     */
    #[\JMS\Serializer\Annotation\SerializedName('last_used')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastUsed = null;

    /**
     * The time this token was revoked.
     *
     * @var ?\DateTime $revokedAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('revoked_at')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $revokedAt = null;

    /**
     * The ID of the user that revoked this token.
     *
     * @var ?string $revokedBy
     */
    #[\JMS\Serializer\Annotation\SerializedName('revoked_by')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revokedBy = null;

    /**
     * The workspace ID this token belongs to.
     *
     * @var string $workspaceId
     */
    #[\JMS\Serializer\Annotation\SerializedName('workspace_id')]
    public string $workspaceId;

    /**
     * @param  ?\DateTime  $createdAt
     * @param  ?string  $createdBy
     * @param  ?string  $description
     * @param  ?\DateTime  $expiresAt
     * @param  ?string  $filters
     * @param  ?string  $id
     * @param  ?string  $workspaceId
     * @param  ?\DateTime  $lastUsed
     * @param  ?\DateTime  $revokedAt
     * @param  ?string  $revokedBy
     */
    public function __construct(?\DateTime $createdAt = null, ?string $createdBy = null, ?string $description = null, ?\DateTime $expiresAt = null, ?string $filters = null, ?string $id = null, ?string $workspaceId = null, ?\DateTime $lastUsed = null, ?\DateTime $revokedAt = null, ?string $revokedBy = null)
    {
        $this->createdAt = $createdAt;
        $this->createdBy = $createdBy;
        $this->description = $description;
        $this->expiresAt = $expiresAt;
        $this->filters = $filters;
        $this->id = $id;
        $this->workspaceId = $workspaceId;
        $this->lastUsed = $lastUsed;
        $this->revokedAt = $revokedAt;
        $this->revokedBy = $revokedBy;
    }
}