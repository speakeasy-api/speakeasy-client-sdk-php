<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Speakeasy\SpeakeasyClientSDK\Models\Shared;


class TargetSDK
{
    /**
     * Remote commit ID.
     *
     * @var ?string $commitHead
     */
    #[\JMS\Serializer\Annotation\SerializedName('commit_head')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commitHead = null;

    /**
     * Name of the CI environment.
     *
     * @var ?string $continuousIntegrationEnvironment
     */
    #[\JMS\Serializer\Annotation\SerializedName('continuous_integration_environment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $continuousIntegrationEnvironment = null;

    /**
     * Error message if the last event was not successful.
     *
     * @var ?string $error
     */
    #[\JMS\Serializer\Annotation\SerializedName('error')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $error = null;

    /**
     * Version of the generated target (post generation)
     *
     * @var ?string $generateConfigPostVersion
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_config_post_version')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $generateConfigPostVersion = null;

    /**
     * Eligible feature set during generation
     *
     * @var ?string $generateEligibleFeatures
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_eligible_features')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $generateEligibleFeatures = null;

    /**
     * gen.lock ID (expected to be a uuid). The same as `id`. A unique identifier for the target.
     *
     * @var string $generateGenLockId
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_gen_lock_id')]
    public string $generateGenLockId;

    /**
     * Features prior to generation
     *
     * @var ?string $generateGenLockPreFeatures
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_gen_lock_pre_features')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $generateGenLockPreFeatures = null;

    /**
     * Artifact version for the Previous Generation
     *
     * @var ?string $generateGenLockPreVersion
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_gen_lock_pre_version')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $generateGenLockPreVersion = null;

    /**
     * The number of operations ignored in generation.
     *
     * @var ?int $generateNumberOfOperationsIgnored
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_number_of_operations_ignored')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $generateNumberOfOperationsIgnored = null;

    /**
     * The number of operations used in generation.
     *
     * @var ?int $generateNumberOfOperationsUsed
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_number_of_operations_used')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $generateNumberOfOperationsUsed = null;

    /**
     * Indicates whether the target was considered published.
     *
     * @var ?bool $generatePublished
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_published')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $generatePublished = null;

    /**
     * eg `typescript`, `terraform`, `python`
     *
     * @var string $generateTarget
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_target')]
    public string $generateTarget;

    /**
     * The workflow name of the target.
     *
     * @var ?string $generateTargetName
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_target_name')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $generateTargetName = null;

    /**
     * The version of the Speakeasy generator for this target eg v2 of the typescript generator.
     *
     * @var ?string $generateTargetVersion
     */
    #[\JMS\Serializer\Annotation\SerializedName('generate_target_version')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $generateTargetVersion = null;

    /**
     * GitHub organization of the action.
     *
     * @var ?string $ghActionOrganization
     */
    #[\JMS\Serializer\Annotation\SerializedName('gh_action_organization')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ghActionOrganization = null;

    /**
     * GitHub Action ref value.
     *
     * @var ?string $ghActionRef
     */
    #[\JMS\Serializer\Annotation\SerializedName('gh_action_ref')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ghActionRef = null;

    /**
     * GitHub repository of the action.
     *
     * @var ?string $ghActionRepository
     */
    #[\JMS\Serializer\Annotation\SerializedName('gh_action_repository')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ghActionRepository = null;

    /**
     * Link to the GitHub action run.
     *
     * @var ?string $ghActionRunLink
     */
    #[\JMS\Serializer\Annotation\SerializedName('gh_action_run_link')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ghActionRunLink = null;

    /**
     * Version of the GitHub action.
     *
     * @var ?string $ghActionVersion
     */
    #[\JMS\Serializer\Annotation\SerializedName('gh_action_version')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ghActionVersion = null;

    /**
     * Current working directory relative to the git root.
     *
     * @var ?string $gitRelativeCwd
     */
    #[\JMS\Serializer\Annotation\SerializedName('git_relative_cwd')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gitRelativeCwd = null;

    /**
     * Default owner for git remote.
     *
     * @var ?string $gitRemoteDefaultOwner
     */
    #[\JMS\Serializer\Annotation\SerializedName('git_remote_default_owner')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gitRemoteDefaultOwner = null;

    /**
     * Default repository name for git remote.
     *
     * @var ?string $gitRemoteDefaultRepo
     */
    #[\JMS\Serializer\Annotation\SerializedName('git_remote_default_repo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gitRemoteDefaultRepo = null;

    /**
     * User email from git configuration.
     *
     * @var ?string $gitUserEmail
     */
    #[\JMS\Serializer\Annotation\SerializedName('git_user_email')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gitUserEmail = null;

    /**
     * User's name from git configuration. (not GitHub username)
     *
     * @var ?string $gitUserName
     */
    #[\JMS\Serializer\Annotation\SerializedName('git_user_name')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gitUserName = null;

    /**
     * Remote hostname.
     *
     * @var ?string $hostname
     */
    #[\JMS\Serializer\Annotation\SerializedName('hostname')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hostname = null;

    /**
     * Unique identifier of the target the same as `generate_gen_lock_id`
     *
     * @var string $id
     */
    #[\JMS\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Timestamp when the event was created in the database.
     *
     * @var \DateTime $lastEventCreatedAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('last_event_created_at')]
    public \DateTime $lastEventCreatedAt;

    /**
     * Unique identifier of the last event for the target
     *
     * @var string $lastEventId
     */
    #[\JMS\Serializer\Annotation\SerializedName('last_event_id')]
    public string $lastEventId;

    /**
     * Type of interaction.
     *
     * @var InteractionType $lastEventInteractionType
     */
    #[\JMS\Serializer\Annotation\SerializedName('last_event_interaction_type')]
    #[\JMS\Serializer\Annotation\Type('\Speakeasy\SpeakeasyClientSDK\Models\Shared\InteractionType')]
    public InteractionType $lastEventInteractionType;

    /**
     * Label of the git repository.
     *
     * @var ?string $repoLabel
     */
    #[\JMS\Serializer\Annotation\SerializedName('repo_label')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $repoLabel = null;

    /**
     * The blob digest of the source.
     *
     * @var ?string $sourceBlobDigest
     */
    #[\JMS\Serializer\Annotation\SerializedName('source_blob_digest')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceBlobDigest = null;

    /**
     * The namespace name of the source.
     *
     * @var ?string $sourceNamespaceName
     */
    #[\JMS\Serializer\Annotation\SerializedName('source_namespace_name')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceNamespaceName = null;

    /**
     * The revision digest of the source.
     *
     * @var ?string $sourceRevisionDigest
     */
    #[\JMS\Serializer\Annotation\SerializedName('source_revision_digest')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceRevisionDigest = null;

    /**
     * Indicates whether the event was successful.
     *
     * @var ?bool $success
     */
    #[\JMS\Serializer\Annotation\SerializedName('success')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $success = null;

    /**
     * Workflow file (post execution)
     *
     * @var ?string $workflowPostRaw
     */
    #[\JMS\Serializer\Annotation\SerializedName('workflow_post_raw')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workflowPostRaw = null;

    /**
     * Workflow file (prior to execution)
     *
     * @var ?string $workflowPreRaw
     */
    #[\JMS\Serializer\Annotation\SerializedName('workflow_pre_raw')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workflowPreRaw = null;

    /**
     * @param  ?string  $generateGenLockId
     * @param  ?string  $generateTarget
     * @param  ?string  $id
     * @param  ?\DateTime  $lastEventCreatedAt
     * @param  ?string  $lastEventId
     * @param  ?InteractionType  $lastEventInteractionType
     * @param  ?string  $commitHead
     * @param  ?string  $continuousIntegrationEnvironment
     * @param  ?string  $error
     * @param  ?string  $generateConfigPostVersion
     * @param  ?string  $generateEligibleFeatures
     * @param  ?string  $generateGenLockPreFeatures
     * @param  ?string  $generateGenLockPreVersion
     * @param  ?int  $generateNumberOfOperationsIgnored
     * @param  ?int  $generateNumberOfOperationsUsed
     * @param  ?bool  $generatePublished
     * @param  ?string  $generateTargetName
     * @param  ?string  $generateTargetVersion
     * @param  ?string  $ghActionOrganization
     * @param  ?string  $ghActionRef
     * @param  ?string  $ghActionRepository
     * @param  ?string  $ghActionRunLink
     * @param  ?string  $ghActionVersion
     * @param  ?string  $gitRelativeCwd
     * @param  ?string  $gitRemoteDefaultOwner
     * @param  ?string  $gitRemoteDefaultRepo
     * @param  ?string  $gitUserEmail
     * @param  ?string  $gitUserName
     * @param  ?string  $hostname
     * @param  ?string  $repoLabel
     * @param  ?string  $sourceBlobDigest
     * @param  ?string  $sourceNamespaceName
     * @param  ?string  $sourceRevisionDigest
     * @param  ?bool  $success
     * @param  ?string  $workflowPostRaw
     * @param  ?string  $workflowPreRaw
     */
    public function __construct(?string $generateGenLockId = null, ?string $generateTarget = null, ?string $id = null, ?\DateTime $lastEventCreatedAt = null, ?string $lastEventId = null, ?InteractionType $lastEventInteractionType = null, ?string $commitHead = null, ?string $continuousIntegrationEnvironment = null, ?string $error = null, ?string $generateConfigPostVersion = null, ?string $generateEligibleFeatures = null, ?string $generateGenLockPreFeatures = null, ?string $generateGenLockPreVersion = null, ?int $generateNumberOfOperationsIgnored = null, ?int $generateNumberOfOperationsUsed = null, ?bool $generatePublished = null, ?string $generateTargetName = null, ?string $generateTargetVersion = null, ?string $ghActionOrganization = null, ?string $ghActionRef = null, ?string $ghActionRepository = null, ?string $ghActionRunLink = null, ?string $ghActionVersion = null, ?string $gitRelativeCwd = null, ?string $gitRemoteDefaultOwner = null, ?string $gitRemoteDefaultRepo = null, ?string $gitUserEmail = null, ?string $gitUserName = null, ?string $hostname = null, ?string $repoLabel = null, ?string $sourceBlobDigest = null, ?string $sourceNamespaceName = null, ?string $sourceRevisionDigest = null, ?bool $success = null, ?string $workflowPostRaw = null, ?string $workflowPreRaw = null)
    {
        $this->generateGenLockId = $generateGenLockId;
        $this->generateTarget = $generateTarget;
        $this->id = $id;
        $this->lastEventCreatedAt = $lastEventCreatedAt;
        $this->lastEventId = $lastEventId;
        $this->lastEventInteractionType = $lastEventInteractionType;
        $this->commitHead = $commitHead;
        $this->continuousIntegrationEnvironment = $continuousIntegrationEnvironment;
        $this->error = $error;
        $this->generateConfigPostVersion = $generateConfigPostVersion;
        $this->generateEligibleFeatures = $generateEligibleFeatures;
        $this->generateGenLockPreFeatures = $generateGenLockPreFeatures;
        $this->generateGenLockPreVersion = $generateGenLockPreVersion;
        $this->generateNumberOfOperationsIgnored = $generateNumberOfOperationsIgnored;
        $this->generateNumberOfOperationsUsed = $generateNumberOfOperationsUsed;
        $this->generatePublished = $generatePublished;
        $this->generateTargetName = $generateTargetName;
        $this->generateTargetVersion = $generateTargetVersion;
        $this->ghActionOrganization = $ghActionOrganization;
        $this->ghActionRef = $ghActionRef;
        $this->ghActionRepository = $ghActionRepository;
        $this->ghActionRunLink = $ghActionRunLink;
        $this->ghActionVersion = $ghActionVersion;
        $this->gitRelativeCwd = $gitRelativeCwd;
        $this->gitRemoteDefaultOwner = $gitRemoteDefaultOwner;
        $this->gitRemoteDefaultRepo = $gitRemoteDefaultRepo;
        $this->gitUserEmail = $gitUserEmail;
        $this->gitUserName = $gitUserName;
        $this->hostname = $hostname;
        $this->repoLabel = $repoLabel;
        $this->sourceBlobDigest = $sourceBlobDigest;
        $this->sourceNamespaceName = $sourceNamespaceName;
        $this->sourceRevisionDigest = $sourceRevisionDigest;
        $this->success = $success;
        $this->workflowPostRaw = $workflowPostRaw;
        $this->workflowPreRaw = $workflowPreRaw;
    }
}